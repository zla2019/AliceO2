digraph "o2::tpc::CTF"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{o2::tpc::CTF\n||+ ClassDefNV()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{o2::ctf::EncodedBlocks\l\< CompressedClustersCounters,\l 23, uint32_t \>\n||+ setHeader()\l+ getHeader()\l+ getHeader()\l+ getMetadata()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #mBlocks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{array\< o2::ctf::Block\l\< uint32_t \>, N \>\n||}",height=0.2,width=0.4,color="black",URL="$da/d30/classstd_1_1array_3_01o2_1_1ctf_1_1Block_3_01uint32__t_01_4_00_01N_01_4.html"];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #mMetadata" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{array\< o2::ctf::Metadata, N \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #mANSHeader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{o2::ctf::ANSHeader\n||+ clear()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dc/dbb/structo2_1_1ctf_1_1ANSHeader.html",tooltip=">>======================== Auxiliary classes =======================>> "];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +minorVersion\n+majorVersion" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{uint8_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #mRegistry" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{o2::ctf::Registry\n||+ getFreeBlockStart()\l+ shrinkFreeBlock()\l+ getFreeSize()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d0/d1c/structo2_1_1ctf_1_1Registry.html",tooltip="registry struct for the buffer start and offsets of writable space "];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +head" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{char\n||}",height=0.2,width=0.4,color="grey75"];
  Node11 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +offsFreeStart\n+size" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{size_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node12 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +nFilledBlocks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #mHeader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{o2::tpc::CompressedClusters\lCounters\n||+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dd/dd7/structo2_1_1tpc_1_1CompressedClustersCounters.html"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" +nAttachedClusters\n+nSliceRows\n+nAttachedClustersReduced\n+nTracks\n+nUnattachedClusters\n+nComppressionModes" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{unsigned\n||}",height=0.2,width=0.4,color="grey75"];
  Node15 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CompressedClustersCounters,\l 23, uint32_t \>" ,fontname="Helvetica"];
  Node15 [label="{o2::ctf::EncodedBlocks\l\< H, N, W \>\n||+ setHeader()\l+ getHeader()\l+ getHeader()\l+ getMetadata()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html",tooltip="<<======================== Auxiliary classes =======================<< "];
  Node6 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #mMetadata" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #mHeader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{H\n||}",height=0.2,width=0.4,color="grey75"];
  Node17 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #mBlocks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{array\< o2::ctf::Block\l\< W \>, N \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #mANSHeader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node15 [color="grey25",fontsize="10",style="solid",label=" #mRegistry" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +N" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{static\n||}",height=0.2,width=0.4,color="grey75"];
}
