digraph "o2::tpc::CTF"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{o2::tpc::CTF\n|+ N\l|+ ClassDefNV()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{o2::ctf::EncodedBlocks\l\< CompressedClustersCounters,\l 23, uint32_t \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ getMetadata()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html"];
  Node2 -> Node1 [dir="back",color="orange",fontsize="10",style="solid",label=" \< CompressedClustersCounters,\l 23, uint32_t \>" ,fontname="Helvetica"];
  Node2 [label="{o2::ctf::EncodedBlocks\l\< H, N, W \>\n|# mRegistry\l# mANSHeader\l# mHeader\l# mMetadata\l# mBlocks\l|+ setHeader()\l+ getHeader()\l+ getHeader()\l+ getMetadata()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black",URL="$dc/d08/classo2_1_1ctf_1_1EncodedBlocks.html",tooltip="<<======================== Auxiliary classes =======================<< "];
}
